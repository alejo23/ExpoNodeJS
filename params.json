{"name":"Wiki NodeJS+Express - Iniciación","tagline":"Exposición de un ejemplo básico usando NodeJS y el Framework Express","google":"","body":"Bienvenido a la exposición de Generación Mejorandola de NodeJS con el FrameWork Express\r\nEsta exposición trata de conocer esta nueva tecnología que nos permite ejecutar Javascript desde el lado del servidor.\r\n\r\nAntes de empezar a explicar el objetivo del primer ejercicio os dejo varios enlaces de interés para poder instalar NodeJS:\r\n[Instalar NodeJS en Debian](https://sekati.com/etc/install-nodejs-on-debian-squeeze)\r\n[Video de instalación NodeJS en Window gracias a Leonidas](http://www.youtube.com/watch?v=3nnpCXtPXHg)\r\n\r\nNodeJS tiene multitud de módulos que nos facilitan el desarrollo ágil de aplicaciones web. Hoy nos vamos a centrar en dos módulos. **Express** y **Jade**\r\n\r\n# Express\r\nExpress es el Framework que vamos a utilizar para realizar aplicaciones web con NodeJS y nos va a facilitar mucho las cosas y, por defecto, utiliza plantillas _Jade_ , es por eso que instalamos también las plantillas Jade.\r\nPuedes encontrar toda la información de Express en su [páginan oficial](http://expressjs.com/)\r\n\r\n# Jade\r\nJade son las plantillas que usa por defecto.\r\nPuedes encontrar toda la información de estas plantillas en su página oficial [página oficial](http://jade-lang.com/)\r\n \r\n# Instalación\r\nPara instalar estos dos módulos deberemos utilizar el siguiente comando en el directorio que queramos crear nuestra aplicación.\r\nnpm install express\r\n\r\nnpm install jade\r\n\r\nPor último, deberemos tener el comando express como variable global, esto se consigue de la siguiente manera:\r\nnpm install express -g\r\n\r\nUna vez tengamos express globalmente podemos crear nuestra primera aplicación de la siguiente manera:\r\nexpress chat\r\n\r\nEn nuestro caso, como queremos utilizar sesiones, haremos lo siguiente:\r\nexpress --sessions chat\r\n\r\nUna vez creada la aplicación, se habrán creado los siguientes ficheros y directorios:\r\n**package.json**\r\nSirve para definir la aplicación, el nombre de la misma, su versión y que dependencias vamos a usar, en este caso es importante poner express y jade con sus correspondientes versiones (npm info express versión)\r\n**app.jss**\r\nEn él, nos encontraremos las llamadas a los diferentes módulos, la configuración para lanzar la aplicación, el puerto por el que va a escuchar (por defecto el 3000), el mapeo de rutas y muchas cosas más.\r\n**public/**\r\nSon los archivos que los usuarios finales tienen libre acceso, como los Javascript, CSS, imágenes o vídeos.\r\n**routes/**\r\nUna vez mapeadas las rutas querremos que hagan algo, es aquí dónde programaremos que hacer en cada caso.\r\n**views/**\r\nComo su nombre indica, va almacenar las plantillas (archivos con extensión .jade)\r\n\r\n# Funcionamiento básico de NodeJS+Express\r\nEl funcionamiento básico de NodeJS+Express es muy sencillo de entender, y una vez tengamos claro estos conceptos podremos realizar aplicaciones web \"estáticas\" y tenemos la base para poder empezar a conocer otros módulos como mongodDb o mysql para las bases de datos, o websockets para realizar aplicaciones en tiempo real, lógicamente el instalar un nuevo módulo requiere aprender el funcionamiento de este.\r\n\r\n## 3 Pasos fundamentales ##\r\nNormalmente los tres pasos fundamentales son los siguientes:\r\n\r\n1. Mapear la ruta: Es decir, cuando un usuario entra por primera vez en nuestra página principal sería de la siguiente forma.\r\n**app.js**\r\napp.get('/', routes.index);\r\n\r\nEn este caso es app.get porque se envía mediante la URL (GET), si se enviase la información a través de un formulario POST, pasaría a app.post.\r\n\r\nEl primer parámetro '/', se refiere a la ruta, en este caso al ser la página principal sería así, si quisiésemos añadir una nueva para un enlace href=\"/quienessomos\", sería app.get('/quienessomos').\r\n\r\nEl segundo parámetro routes.index, se refiere quién se va encargar de realizar las operaciones correspondientes a este mapeo, y es aquí cuando pasamos al paso 2.\r\n\r\n2. Routes: Aquí el archivo index.js se va encargar de hacer las operaciones pertinentes para cada mapeo de rutas. Normalmente se pueden realizar dos operaciones finales: Renderizar una plantilla y pasaríamos al paso 3 o redireccionar a otra página que volveríamos al paso 1.\r\n**index.js**\r\nexports.index = function(req, res){\r\n  res.render('index', { title: 'Bienvenido al Chat' });\r\n};\r\n\r\nexports.index, en este caso es .index porque en app.js hemos dicho que quién se va encargar de esta ruta es routes.index.\r\n\r\nEs una función que tiene dos parámetros que nos va a permitir recibir parámetros mediant URL, formularios o sesiones, o, renderizar o redireccionar entre otras cosas a otras URLs\r\n\r\n[REQ](http://expressjs.com/api.html#req.params)\r\n[RES](http://expressjs.com/api.html#res.status)\r\n\r\nEn este ejemplo, estamos renderizando el archivo index.jade y le enviamos como parámetro el título que va a tener la página.\r\nres.render('index', {title :'Bienvenido al Chat'});\r\n\r\n3. Views: renderizar plantilla. Si se desea conocer más las plantillas Jade, ir al enlace que he puesto al comienzo de esta Wiki.\r\n\r\n# Chat\r\nEn este primer ejercicio, vamos a tratar de realizar un formulario inicial para que el usuario ingrese su nick o nombre de usuario, y si no existe entre los usuarios conectados que le deje pasar al chat creando una sesión y mostrándole los diferentes usuarios que estan conectados, y si ya existe ese usuario que muestre una página con el error que ese usuario ya esta siendo utilizado. Es un ejemplo sencillo pero que recomiendo realizar para ir aprendiendo los conceptos básicos de NodeJS.\r\n\r\nPor último, podéis ver a través del repositorio [NodeJS](https://github.com/antoniopol06/ExpoNodeJS/tree/master/NodeJS) el código de toda la aplicación con sus respectivos comentarios para facilitar el entendimiento del código o ver el vídeo de la exposición a través de este [link](http://www.youtube.com/watch?v=JbyVR54bH5I&feature=plcp)\r\n\r\nRecuerden, no dejen de aprender ;)\r\n\r\n\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}